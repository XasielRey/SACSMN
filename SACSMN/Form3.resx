<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAC0ASkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2SiiloASiiloAKSlpKACilooASiiloASilpKACiobu7gsbWS5
        u5o4IIxl5JGCqo9ya8x8TfGaOMvb+G7cTN0+13CkJ/wFOp+px9DQB6jNPFbwtNPKkUSDLO7BVA9ya5DV
        fir4Z0wssd299IONtom8f99HC/rXi1xfa94z1Hy5HvdVuQciJFLKn/AR8qj8q6rSPgzrt8FfUrm205CP
        uD99IPwGFH5mgDUvvjjKcjTtGRcdGuJ8/wDjqj+tYtx8YvE02TGLCAf7EBP/AKExrtbD4L+H7fBvZ769
        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
</value>
  </data>
</root>